!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FIELD_DESCRIPTION!Python	nameref	/the original name for the tag/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C++	M,module	/modules/
!_TAG_KIND_DESCRIPTION!C++	P,partition	/partitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Iniconf	k,key	/keys/
!_TAG_KIND_DESCRIPTION!Iniconf	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Python	I,namespace	/name referring a module defined in other file/
!_TAG_KIND_DESCRIPTION!Python	Y,unknown	/name referring a class\/variable\/function\/module defined in other module/
!_TAG_KIND_DESCRIPTION!Python	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Python	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Python	i,module	/modules/
!_TAG_KIND_DESCRIPTION!Python	m,member	/class members/
!_TAG_KIND_DESCRIPTION!Python	v,variable	/variables/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!Iniconf	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	1.1	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PARSER_VERSION!Python	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/cmj/daily_use/searchProjectV3.0/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/e8578f4ed/
!_TAG_ROLE_DESCRIPTION!C++!header	exported	/exported with "exported imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!module	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!module	partOwner	/used for specifying a partition/
!_TAG_ROLE_DESCRIPTION!C++!partition	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
!_TAG_ROLE_DESCRIPTION!Python!module	imported	/imported modules/
!_TAG_ROLE_DESCRIPTION!Python!module	indirectlyImported	/module imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Python!module	namespace	/namespace from where classes\/variables\/functions are imported/
!_TAG_ROLE_DESCRIPTION!Python!unknown	imported	/imported from the other module/
!_TAG_ROLE_DESCRIPTION!Python!unknown	indirectlyImported	/classes\/variables\/functions\/modules imported in alternative name/
$(EXEC)	tinyTest/rss/Makefile	/^$(EXEC): $(OBJS)$/;"	t
%.o	tinyTest/rss/Makefile	/^%.o: %.cc$/;"	t
%.o	tinyTest/rss/Makefile	/^%.o: %.cpp$/;"	t
ADDR	src/testClient.cc	/^#define ADDR /;"	d	file:
Acceptor	include/Acceptor.h	/^class Acceptor$/;"	c
Acceptor	src/Acceptor.cc	/^Acceptor::Acceptor(const std::string &ip,short port)$/;"	f	class:Acceptor
BUFFSIZE	include/SockIo.h	/^#define BUFFSIZE /;"	d
BUFSIZE	src/testClient.cc	/^#define BUFSIZE /;"	d	file:
CXX	tinyTest/rss/Makefile	/^CXX := g++$/;"	m
CandidateResult	include/KeyRecommander.h	/^struct CandidateResult{$/;"	s
CandidateResult	src/KeyRecommander.cc	/^CandidateResult::CandidateResult(string word,int freq,int dis)$/;"	f	class:CandidateResult
Configuration	include/Configuration.h	/^class Configuration$/;"	c
Configuration	src/Configuration.cc	/^Configuration::Configuration()$/;"	f	class:Configuration
CppJieba字典	dict/README.md	/^# CppJieba字典$/;"	c
DICT_PATH	src/SplitToolCppJieba.cc	/^const char* const DICT_PATH = "\/home\/cmj\/daily_use\/searchProjectV1\/dict\/jieba.dict.utf8";$/;"	v	typeref:typename:const char * const
DICT_PATH	tinyTest/jiebademo.cc	/^const char* const DICT_PATH = "..\/dict\/jieba.dict.utf8";$/;"	v	typeref:typename:const char * const
DictProducer	include/DictProducer.h	/^class DictProducer$/;"	c
DictProducer	src/DictProducer.cc	/^DictProducer::DictProducer(const string & cnDir)$/;"	f	class:DictProducer
Dictionary	include/Dictionary.h	/^class Dictionary$/;"	c
Dictionary	src/Dictionary.cc	/^Dictionary::Dictionary(){$/;"	f	class:Dictionary
DirScanner	include/DirScanner.h	/^class DirScanner$/;"	c
DirScanner	src/DirScanner.cc	/^DirScanner::DirScanner(){}$/;"	f	class:DirScanner
DirectoryOfThisScript	.ycm_extra_conf.py	/^def DirectoryOfThisScript():$/;"	f
EXEC	tinyTest/rss/Makefile	/^EXEC := result$/;"	m
EventLoop	include/EventLoop.h	/^class EventLoop$/;"	c
EventLoop	src/EventLoop.cc	/^EventLoop::EventLoop(Acceptor &acceptor)$/;"	f	class:EventLoop
FlagsForFile	.ycm_extra_conf.py	/^def FlagsForFile( filename, **kwargs ):$/;"	f
GetCompilationInfoForFile	.ycm_extra_conf.py	/^def GetCompilationInfoForFile( filename ):$/;"	f
HMM_PATH	src/SplitToolCppJieba.cc	/^const char* const HMM_PATH = "\/home\/cmj\/daily_use\/searchProjectV1\/dict\/hmm_model.utf8";$/;"	v	typeref:typename:const char * const
HMM_PATH	tinyTest/jiebademo.cc	/^const char* const HMM_PATH = "..\/dict\/hmm_model.utf8";$/;"	v	typeref:typename:const char * const
IDF_PATH	src/SplitToolCppJieba.cc	/^const char* const IDF_PATH = "\/home\/cmj\/daily_use\/searchProjectV1\/dict\/idf.utf8";$/;"	v	typeref:typename:const char * const
IDF_PATH	tinyTest/jiebademo.cc	/^const char* const IDF_PATH = "..\/dict\/idf.utf8";$/;"	v	typeref:typename:const char * const
InetAddr	include/InetAddr.h	/^class InetAddr$/;"	c
InetAddr	src/InetAddr.cc	/^InetAddr::InetAddr(const string & ip,short port){$/;"	f	class:InetAddr
InetAddr	src/InetAddr.cc	/^InetAddr::InetAddr(const struct sockaddr_in & addr){$/;"	f	class:InetAddr
IsHeaderFile	.ycm_extra_conf.py	/^def IsHeaderFile( filename ):$/;"	f
K_DB_PATH	tinyTest/xapianTest.cc	/^const char* const K_DB_PATH = "index_data";$/;"	v	typeref:typename:const char * const
K_DOC_UNIQUE_ID	tinyTest/xapianTest.cc	/^const char* const K_DOC_UNIQUE_ID = "007";$/;"	v	typeref:typename:const char * const
KeyRecommander	include/KeyRecommander.h	/^class KeyRecommander$/;"	c
KeyRecommander	src/KeyRecommander.cc	/^KeyRecommander::KeyRecommander(string word,shared_ptr<TcpConnection> ptcp)$/;"	f	class:KeyRecommander
LOGGER_LEVEL	tinyTest/simdemp.cpp	/^#define LOGGER_LEVEL /;"	d	file:
LRU	include/LRU.h	/^class LRU$/;"	c
LRU	src/LRU.cc	/^LRU::LRU(int capacity)$/;"	f	class:LRU
LRU	tinyTest/LRU.cc	/^    LRU(int capacity)$/;"	f	class:LRU	file:
LRU	tinyTest/LRU.cc	/^class LRU$/;"	c	file:
LRUCache	tinyTest/myLru.cc	/^    LRUCache(int capacity) {$/;"	f	class:LRUCache	file:
LRUCache	tinyTest/myLru.cc	/^class LRUCache {$/;"	c	file:
MyCompareCandidate	include/KeyRecommander.h	/^struct MyCompareCandidate{$/;"	s
MyCompareWebpage	include/WebPageQuery.h	/^struct MyCompareWebpage{$/;"	s
OBJS	tinyTest/rss/Makefile	/^OBJS := $(OBJS:.cc=.o)$/;"	m
OBJS	tinyTest/rss/Makefile	/^OBJS := $(SRCS:.cpp=.o)$/;"	m
PAGEMAXSIZE	src/PageLibPreprocessor.cc	/^#define PAGEMAXSIZE /;"	d	file:
PORT	src/testClient.cc	/^#define PORT /;"	d	file:
PageLibPreprocessor	include/PageLibPreprocessor.h	/^class PageLibPreprocessor$/;"	c
PageLibPreprocessor	src/PageLibPreprocessor.cc	/^PageLibPreprocessor::PageLibPreprocessor()$/;"	f	class:PageLibPreprocessor
ProtocolParser	include/ProtocolParser.h	/^class ProtocolParser$/;"	c
ProtocolParser	src/ProtocolParser.cc	/^ProtocolParser::ProtocolParser(string & msg)$/;"	f	class:ProtocolParser
RedisServer	include/RedisServer.h	/^class RedisServer$/;"	c
RedisServer	src/RedisServer.cc	/^RedisServer::RedisServer()$/;"	f	class:RedisServer
RssItem	tinyTest/rss/RSS.hpp	/^struct RssItem$/;"	s
RssReader	tinyTest/rss/RSS.cpp	/^RssReader::RssReader(const char * filename){$/;"	f	class:RssReader
RssReader	tinyTest/rss/RSS.hpp	/^class RssReader$/;"	c
SOURCE_EXTENSIONS	.ycm_extra_conf.py	/^SOURCE_EXTENSIONS = [ '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ]$/;"	v
SRCS	tinyTest/rss/Makefile	/^SRCS := $(wildcard *.cpp *.cc)$/;"	m
STOP_WORD_PATH	src/SplitToolCppJieba.cc	/^const char* const STOP_WORD_PATH = "\/home\/cmj\/daily_use\/searchProjectV1\/dict\/stop_words.ut/;"	v	typeref:typename:const char * const
STOP_WORD_PATH	tinyTest/jiebademo.cc	/^const char* const STOP_WORD_PATH = "..\/dict\/stop_words.utf8";$/;"	v	typeref:typename:const char * const
SearchServer	include/SearchServer.h	/^class SearchServer$/;"	c
SearchServer	src/SearchServer.cc	/^SearchServer::SearchServer(int poolSize,int queueSize,const string & ip,unsigned short port)$/;"	f	class:SearchServer
SockIo	include/SockIo.h	/^class SockIo$/;"	c
SockIo	src/SockIo.cc	/^SockIo::SockIo(int connFd)$/;"	f	class:SockIo
Socket	include/Socket.h	/^class Socket$/;"	c
Socket	src/Socket.cc	/^Socket::Socket(){$/;"	f	class:Socket
Socket	src/Socket.cc	/^Socket::Socket(int fd)$/;"	f	class:Socket
Solution	tinyTest/minDistance.cc	/^class Solution {$/;"	c	file:
SplitTool	include/SplitTool.h	/^class SplitTool$/;"	c
SplitToolCppJieba	include/SplitToolCppJieba.h	/^class SplitToolCppJieba$/;"	c
SplitToolCppJieba	src/SplitToolCppJieba.cc	/^SplitToolCppJieba::SplitToolCppJieba()$/;"	f	class:SplitToolCppJieba
TFIDF	tinyTest/tfIdf.cc	/^class TFIDF {$/;"	c	file:
Task	include/Task.h	/^class Task$/;"	c
Task	include/TaskQueue.h	/^    using Task = function<void(LRU*)> ;$/;"	t	class:TaskQueue
Task	include/ThreadPool.h	/^    using Task = function<void(LRU *)> ;$/;"	t	class:ThreadPool
Task	src/Task.cc	/^Task::Task(const std::string &msg,std::shared_ptr<TcpConnection> pcon)$/;"	f	class:Task
Task	src/ThreadPool.cc	/^using Task = function<void()>;$/;"	t	file:
TaskQueue	include/TaskQueue.h	/^class TaskQueue$/;"	c
TaskQueue	src/TaskQueue.cc	/^TaskQueue::TaskQueue(size_t size)$/;"	f	class:TaskQueue
TcpConnection	include/TcpConnection.h	/^class TcpConnection$/;"	c
TcpConnection	src/TcpConnection.cc	/^TcpConnection::TcpConnection(int connFd,EventLoop * loop)$/;"	f	class:TcpConnection
TcpServer	include/TcpServer.h	/^class TcpServer$/;"	c
TcpServer	src/TcpServer.cc	/^TcpServer::TcpServer(const std::string &ip,unsigned short port)$/;"	f	class:TcpServer
TcpServer	src/TcpServer.cc	/^TcpServer::TcpServer(unsigned short port)$/;"	f	class:TcpServer
ThreadPool	include/ThreadPool.h	/^class ThreadPool$/;"	c
ThreadPool	src/ThreadPool.cc	/^ThreadPool::ThreadPool(size_t threadNum,size_t queSize)$/;"	f	class:ThreadPool
USER_DICT_PATH	src/SplitToolCppJieba.cc	/^const char* const USER_DICT_PATH = "\/home\/cmj\/daily_use\/searchProjectV1\/dict\/user.dict.utf/;"	v	typeref:typename:const char * const
USER_DICT_PATH	tinyTest/jiebademo.cc	/^const char* const USER_DICT_PATH = "..\/dict\/user.dict.utf8";$/;"	v	typeref:typename:const char * const
WebPage	include/WebPage.h	/^class WebPage$/;"	c
WebPageQuery	include/WebPageQuery.h	/^class WebPageQuery$/;"	c
WebPageQuery	src/WebPageQuery.cc	/^WebPageQuery::WebPageQuery()$/;"	f	class:WebPageQuery
WebPageSearcher	include/WebPageSearcher.h	/^class WebPageSearcher$/;"	c
WebPageSearcher	src/WebPageSearcher.cc	/^WebPageSearcher::WebPageSearcher(string word,shared_ptr<TcpConnection> ptcp,LRU* cacheLocal)$/;"	f	class:WebPageSearcher
__Acceptor_H__	include/Acceptor.h	/^#define __Acceptor_H__$/;"	d
__Configuration_H__	include/Configuration.h	/^#define __Configuration_H__$/;"	d
__DictProducer_H__	include/DictProducer.h	/^#define __DictProducer_H__$/;"	d
__Dictionary_H__	include/Dictionary.h	/^#define __Dictionary_H__$/;"	d
__DirScanner_H__	include/DirScanner.h	/^#define __DirScanner_H__$/;"	d
__EchoServer_H__	include/SearchServer.h	/^#define __EchoServer_H__$/;"	d
__EventLoop_H__	include/EventLoop.h	/^#define __EventLoop_H__$/;"	d
__InetAddr_H__	include/InetAddr.h	/^#define __InetAddr_H__$/;"	d
__KeyRecommander_H__	include/KeyRecommander.h	/^#define __KeyRecommander_H__$/;"	d
__LRU_H__	include/LRU.h	/^#define __LRU_H__$/;"	d
__PageLibPreprocessor_H__	include/PageLibPreprocessor.h	/^#define __PageLibPreprocessor_H__$/;"	d
__ProtocolParser_H__	include/ProtocolParser.h	/^#define __ProtocolParser_H__$/;"	d
__RSS_H__	tinyTest/rss/RSS.hpp	/^#define __RSS_H__$/;"	d
__RedisServer_H__	include/RedisServer.h	/^#define __RedisServer_H__$/;"	d
__SockIo_H__	include/SockIo.h	/^#define __SockIo_H__$/;"	d
__Socket_H__	include/Socket.h	/^#define __Socket_H__$/;"	d
__SplitToolCppJieba_H__	include/SplitToolCppJieba.h	/^#define __SplitToolCppJieba_H__$/;"	d
__SplitTool_H__	include/SplitTool.h	/^#define __SplitTool_H__$/;"	d
__TaskQueue_H__	include/TaskQueue.h	/^#define __TaskQueue_H__$/;"	d
__Task_H__	include/Task.h	/^#define __Task_H__$/;"	d
__TcpConnection_H__	include/TcpConnection.h	/^#define __TcpConnection_H__$/;"	d
__TcpServer_H__	include/TcpServer.h	/^#define __TcpServer_H__$/;"	d
__WebPageQuery_H__	include/WebPageQuery.h	/^#define __WebPageQuery_H__$/;"	d
__WebPageSearcher_H__	include/WebPageSearcher.h	/^#define __WebPageSearcher_H__$/;"	d
__WebPage_H__	include/WebPage.h	/^#define __WebPage_H__$/;"	d
__anon3cfb70b80102	src/SplitToolCppJieba.cc	/^    words.erase(remove_if(words.begin(),words.end(),[&](string& word){$/;"	f	function:SplitToolCppJieba::cut	file:
__anon403016a10102	src/WebPageQuery.cc	/^        for_each(tempInvert.begin(),tempInvert.end(),[&](pair<int,double>couple){$/;"	f	function:WebPageQuery::storeIntersection	file:
__anona1ee06580102	src/DictProducer.cc	/^        std::for_each(file.begin(),file.end(),[](char &ch){$/;"	f	function:DictProducer::buildEnDict	file:
__anona1ee06580202	src/DictProducer.cc	/^        buff.erase(remove_if(buff.begin(),buff.end(),[](char & ch){$/;"	f	function:DictProducer::buildCnDict	file:
__tavival_H__	include/travial.h	/^#define __tavival_H__$/;"	d
__threadPool_H__	include/ThreadPool.h	/^#define __threadPool_H__$/;"	d
_acceptor	include/EventLoop.h	/^    Acceptor & _acceptor;$/;"	m	class:EventLoop	typeref:typename:Acceptor &
_acceptor	include/TcpServer.h	/^    Acceptor _acceptor;$/;"	m	class:TcpServer	typeref:typename:Acceptor
_addr	include/Acceptor.h	/^    InetAddr _addr;$/;"	m	class:Acceptor	typeref:typename:InetAddr
_addr	include/InetAddr.h	/^    struct sockaddr_in _addr;$/;"	m	class:InetAddr	typeref:struct:sockaddr_in
_cache	include/LRU.h	/^    unordered_map<string,list<pair<string,string>>::iterator> _cache;$/;"	m	class:LRU	typeref:typename:unordered_map<string,list<pair<string,string>>::iterator>
_cache	tinyTest/LRU.cc	/^    unordered_map<int, list<pair<int, int>>::iterator> _cache;$/;"	m	class:LRU	typeref:typename:unordered_map<int,list<pair<int,int>>::iterator>	file:
_cacheLRU	include/WebPageQuery.h	/^    LRU _cacheLRU;$/;"	m	class:WebPageQuery	typeref:typename:LRU
_cacheLocal	include/WebPageSearcher.h	/^    LRU * _cacheLocal;$/;"	m	class:WebPageSearcher	typeref:typename:LRU *
_capacity	include/LRU.h	/^    int _capacity;$/;"	m	class:LRU	typeref:typename:int
_capacity	tinyTest/LRU.cc	/^    int _capacity;\/\/元素的个数$/;"	m	class:LRU	typeref:typename:int	file:
_capacity	tinyTest/myLru.cc	/^    int _capacity; \/\/2$/;"	m	class:LRUCache	typeref:typename:int	file:
_clientLRU	include/ThreadPool.h	/^    map<std::thread::id,pair<LRU*,mutex*>> _clientLRU;$/;"	m	class:ThreadPool	typeref:typename:map<std::thread::id,pair<LRU *,mutex * >>
_cnDict	include/DictProducer.h	/^    vector<pair<string,int>> _cnDict;$/;"	m	class:DictProducer	typeref:typename:vector<pair<string,int>>
_cnFilePaths	include/DictProducer.h	/^    vector<string> _cnFilePaths;$/;"	m	class:DictProducer	typeref:typename:vector<string>
_con	include/Task.h	/^    std::shared_ptr<TcpConnection> _con;$/;"	m	class:Task	typeref:typename:std::shared_ptr<TcpConnection>
_cond	include/ThreadPool.h	/^    condition_variable _cond;$/;"	m	class:ThreadPool	typeref:typename:condition_variable
_condMtx	include/ThreadPool.h	/^    mutex _condMtx;$/;"	m	class:ThreadPool	typeref:typename:mutex
_configMap	include/Configuration.h	/^    map<string,string> _configMap;$/;"	m	class:Configuration	typeref:typename:map<string,string>
_conn	include/KeyRecommander.h	/^    shared_ptr<TcpConnection>  _conn;$/;"	m	class:KeyRecommander	typeref:typename:shared_ptr<TcpConnection>
_conn	include/WebPageSearcher.h	/^    shared_ptr<TcpConnection> _conn;$/;"	m	class:WebPageSearcher	typeref:typename:shared_ptr<TcpConnection>
_cutter	include/DictProducer.h	/^    SplitTool * _cutter;$/;"	m	class:DictProducer	typeref:typename:SplitTool *
_dict	include/DictProducer.h	/^    vector<pair<string,int>> _dict;$/;"	m	class:DictProducer	typeref:typename:vector<pair<string,int>>
_dict	include/Dictionary.h	/^    vector<pair<string,int>> _dict;$/;"	m	class:Dictionary	typeref:typename:vector<pair<string,int>>
_dictzh	include/Dictionary.h	/^    vector<pair<string,int>> _dictzh;$/;"	m	class:Dictionary	typeref:typename:vector<pair<string,int>>
_distance	include/KeyRecommander.h	/^    int _distance;$/;"	m	struct:CandidateResult	typeref:typename:int
_doc	include/WebPage.h	/^    string _doc;$/;"	m	class:WebPage	typeref:typename:string
_docContent	include/WebPage.h	/^    string _docContent;$/;"	m	class:WebPage	typeref:typename:string
_docId	include/WebPage.h	/^    int _docId;$/;"	m	class:WebPage	typeref:typename:int
_docTitle	include/WebPage.h	/^    string _docTitle;$/;"	m	class:WebPage	typeref:typename:string
_docUrl	include/WebPage.h	/^    string _docUrl;$/;"	m	class:WebPage	typeref:typename:string
_epList	include/EventLoop.h	/^    std::vector<struct epoll_event> _epList;$/;"	m	class:EventLoop	typeref:typename:std::vector<struct epoll_event>
_epfd	include/EventLoop.h	/^    int _epfd;$/;"	m	class:EventLoop	typeref:typename:int
_evtfd	include/EventLoop.h	/^    int _evtfd;$/;"	m	class:EventLoop	typeref:typename:int
_fd	include/Socket.h	/^    int _fd;$/;"	m	class:Socket	typeref:typename:int
_filepath	include/Configuration.h	/^    string _filepath;$/;"	m	class:Configuration	typeref:typename:string
_files	include/DirScanner.h	/^    vector<string> _files;$/;"	m	class:DirScanner	typeref:typename:vector<string>
_fingerPrints	include/PageLibPreprocessor.h	/^    vector<uint64_t> _fingerPrints;$/;"	m	class:PageLibPreprocessor	typeref:typename:vector<uint64_t>
_freq	include/KeyRecommander.h	/^    int _freq;$/;"	m	struct:CandidateResult	typeref:typename:int
_inLoop	include/EventLoop.h	/^    bool _inLoop;$/;"	m	class:EventLoop	typeref:typename:bool
_index	include/DictProducer.h	/^    map<string,set<int>> _index;$/;"	m	class:DictProducer	typeref:typename:map<string,set<int>>
_indexCn	include/DictProducer.h	/^    map<string,set<int>> _indexCn;$/;"	m	class:DictProducer	typeref:typename:map<string,set<int>>
_indexTable	include/Dictionary.h	/^    unordered_map<string,set<int>> _indexTable;$/;"	m	class:Dictionary	typeref:typename:unordered_map<string,set<int>>
_instance	include/Configuration.h	/^    static Configuration * _instance;$/;"	m	class:Configuration	typeref:typename:Configuration *
_instance	src/Configuration.cc	/^Configuration * Configuration::_instance = nullptr;$/;"	m	class:Configuration	typeref:typename:Configuration *
_invertIndexLib	include/PageLibPreprocessor.h	/^    unordered_map<string,set<pair<int,double>>> _invertIndexLib;$/;"	m	class:PageLibPreprocessor	typeref:typename:unordered_map<string,set<pair<int,double>>>
_invertIndexLib	include/WebPageQuery.h	/^    unordered_map<string,set<pair<int,double>>> _invertIndexLib;$/;"	m	class:WebPageQuery	typeref:typename:unordered_map<string,set<pair<int,double>>>
_isExit	include/ThreadPool.h	/^    bool _isExit;$/;"	m	class:ThreadPool	typeref:typename:bool
_jieba	include/SplitToolCppJieba.h	/^    cppjieba::Jieba _jieba;$/;"	m	class:SplitToolCppJieba	typeref:typename:cppjieba::Jieba
_listenMap	include/EventLoop.h	/^    std::map<int,std::shared_ptr<TcpConnection>> _listenMap;$/;"	m	class:EventLoop	typeref:typename:std::map<int,std::shared_ptr<TcpConnection>>
_localAddr	include/TcpConnection.h	/^    InetAddr _localAddr;$/;"	m	class:TcpConnection	typeref:typename:InetAddr
_loop	include/TcpConnection.h	/^    EventLoop * _loop;$/;"	m	class:TcpConnection	typeref:typename:EventLoop *
_loop	include/TcpServer.h	/^    EventLoop _loop;$/;"	m	class:TcpServer	typeref:typename:EventLoop
_msg	include/ProtocolParser.h	/^    string _msg;$/;"	m	class:ProtocolParser	typeref:typename:string
_msg	include/Task.h	/^    std::string _msg;$/;"	m	class:Task	typeref:typename:std::string
_mtx	include/EventLoop.h	/^    std::mutex _mtx;$/;"	m	class:EventLoop	typeref:typename:std::mutex
_mtx	include/RedisServer.h	/^    mutex _mtx;$/;"	m	class:RedisServer	typeref:typename:mutex
_mtxLru	include/LRU.h	/^    mutex _mtxLru;$/;"	m	class:LRU	typeref:typename:mutex
_mutex	include/TaskQueue.h	/^    mutex _mutex;$/;"	m	class:TaskQueue	typeref:typename:mutex
_nodes	include/LRU.h	/^    list<pair<string,string>> _nodes;$/;"	m	class:LRU	typeref:typename:list<pair<string,string>>
_nodes	tinyTest/LRU.cc	/^    list<pair<int, int>> _nodes;\/\/存放key-value的容器$/;"	m	class:LRU	typeref:typename:list<pair<int,int>>	file:
_notEmpty	include/TaskQueue.h	/^    condition_variable _notEmpty;$/;"	m	class:TaskQueue	typeref:typename:condition_variable
_notFull	include/TaskQueue.h	/^    condition_variable _notFull;$/;"	m	class:TaskQueue	typeref:typename:condition_variable
_offSet	include/PageLibPreprocessor.h	/^    static int _offSet;$/;"	m	class:PageLibPreprocessor	typeref:typename:int
_offSet	src/PageLibPreprocessor.cc	/^int PageLibPreprocessor::_offSet=0;$/;"	m	class:PageLibPreprocessor	typeref:typename:int
_offsetLib	include/PageLibPreprocessor.h	/^    map<int,pair<int,int>> _offsetLib;$/;"	m	class:PageLibPreprocessor	typeref:typename:map<int,pair<int,int>>
_offsetlib	include/WebPageQuery.h	/^    unordered_map<int,pair<int,int>> _offsetlib;$/;"	m	class:WebPageQuery	typeref:typename:unordered_map<int,pair<int,int>>
_onClose	include/EventLoop.h	/^    std::function<void(std::shared_ptr<TcpConnection>)> _onClose;$/;"	m	class:EventLoop	typeref:typename:std::function<void (std::shared_ptr<TcpConnection>)>
_onClose	include/TcpConnection.h	/^    std::function<void(std::shared_ptr<TcpConnection>)> _onClose;$/;"	m	class:TcpConnection	typeref:typename:std::function<void (std::shared_ptr<TcpConnection>)>
_onMessage	include/EventLoop.h	/^    std::function<void(std::shared_ptr<TcpConnection>)> _onMessage;$/;"	m	class:EventLoop	typeref:typename:std::function<void (std::shared_ptr<TcpConnection>)>
_onMessage	include/TcpConnection.h	/^    std::function<void(std::shared_ptr<TcpConnection>)> _onMessage;$/;"	m	class:TcpConnection	typeref:typename:std::function<void (std::shared_ptr<TcpConnection>)>
_onNewConnection	include/EventLoop.h	/^    std::function<void(std::shared_ptr<TcpConnection>)> _onNewConnection;$/;"	m	class:EventLoop	typeref:typename:std::function<void (std::shared_ptr<TcpConnection>)>
_onNewConnection	include/TcpConnection.h	/^    std::function<void(std::shared_ptr<TcpConnection>)> _onNewConnection;$/;"	m	class:TcpConnection	typeref:typename:std::function<void (std::shared_ptr<TcpConnection>)>
_once	include/Configuration.h	/^    static pthread_once_t _once;$/;"	m	class:Configuration	typeref:typename:pthread_once_t
_once	include/Dictionary.h	/^    static pthread_once_t  _once;$/;"	m	class:Dictionary	typeref:typename:pthread_once_t
_once	include/WebPageQuery.h	/^    static pthread_once_t _once;$/;"	m	class:WebPageQuery	typeref:typename:pthread_once_t
_once	src/Configuration.cc	/^pthread_once_t Configuration::_once = PTHREAD_ONCE_INIT;$/;"	m	class:Configuration	typeref:typename:pthread_once_t
_once	src/Dictionary.cc	/^pthread_once_t  Dictionary::_once = PTHREAD_ONCE_INIT;$/;"	m	class:Dictionary	typeref:typename:pthread_once_t
_once	src/WebPageQuery.cc	/^pthread_once_t WebPageQuery::_once = PTHREAD_ONCE_INIT;$/;"	m	class:WebPageQuery	typeref:typename:pthread_once_t
_pInstance	include/Dictionary.h	/^    static Dictionary* _pInstance;$/;"	m	class:Dictionary	typeref:typename:Dictionary *
_pInstance	include/WebPageQuery.h	/^    static WebPageQuery * _pInstance;$/;"	m	class:WebPageQuery	typeref:typename:WebPageQuery *
_pInstance	src/Dictionary.cc	/^Dictionary* Dictionary::_pInstance= nullptr;$/;"	m	class:Dictionary	typeref:typename:Dictionary *
_pInstance	src/WebPageQuery.cc	/^WebPageQuery* WebPageQuery::_pInstance = nullptr;$/;"	m	class:WebPageQuery	typeref:typename:WebPageQuery *
_pageList	include/PageLibPreprocessor.h	/^    vector<WebPage> _pageList;$/;"	m	class:PageLibPreprocessor	typeref:typename:vector<WebPage>
_pages	include/WebPageQuery.h	/^    unordered_map<int,WebPage> _pages;$/;"	m	class:WebPageQuery	typeref:typename:unordered_map<int,WebPage>
_pagesWeight	include/WebPageQuery.h	/^    map<int,vector<double>> _pagesWeight;$/;"	m	class:WebPageQuery	typeref:typename:map<int,vector<double>>
_peerAddr	include/TcpConnection.h	/^    InetAddr _peerAddr;$/;"	m	class:TcpConnection	typeref:typename:InetAddr
_pendings	include/LRU.h	/^    list<pair<string,string>> _pendings;$/;"	m	class:LRU	typeref:typename:list<pair<string,string>>
_pool	include/SearchServer.h	/^    ThreadPool _pool;$/;"	m	class:SearchServer	typeref:typename:ThreadPool
_que	include/TaskQueue.h	/^    queue<Task>_que;$/;"	m	class:TaskQueue	typeref:typename:queue<Task>
_queSize	include/TaskQueue.h	/^    size_t _queSize;$/;"	m	class:TaskQueue	typeref:typename:size_t
_queSize	include/ThreadPool.h	/^    size_t _queSize;$/;"	m	class:ThreadPool	typeref:typename:size_t
_queryWordsWeight	include/WebPageQuery.h	/^    vector<double> _queryWordsWeight;$/;"	m	class:WebPageQuery	typeref:typename:vector<double>
_redis	include/RedisServer.h	/^    redisContext * _redis;   $/;"	m	class:RedisServer	typeref:typename:redisContext *
_redisServer	include/WebPageSearcher.h	/^    RedisServer _redisServer;$/;"	m	class:WebPageSearcher	typeref:typename:RedisServer
_resultQue	include/KeyRecommander.h	/^    priority_queue<CandidateResult,vector<CandidateResult>,MyCompareCandidate> _resultQue;$/;"	m	class:KeyRecommander	typeref:typename:priority_queue<CandidateResult,vector<CandidateResult>,MyCompareCandidate>
_resultQue	include/WebPageQuery.h	/^    priority_queue<pair<WebPage,double>,vector<pair<WebPage,double>>,MyCompareWebpage> _resultQu/;"	m	class:WebPageQuery	typeref:typename:priority_queue<pair<WebPage,double>,vector<pair<WebPage,double>>,MyCompareWebpage>
_resultQue	include/WebPageSearcher.h	/^    priority_queue<pair<WebPage,double>,vector<pair<WebPage,double>>,MyCompareWebpage> _resultQu/;"	m	class:WebPageSearcher	typeref:typename:priority_queue<pair<WebPage,double>,vector<pair<WebPage,double>>,MyCompareWebpage>
_rss	tinyTest/rss/RSS.hpp	/^    std::vector<RssItem> _rss;$/;"	m	class:RssReader	typeref:typename:std::vector<RssItem>
_sock	include/TcpConnection.h	/^    Socket _sock;$/;"	m	class:TcpConnection	typeref:typename:Socket
_sockio	include/SockIo.h	/^    int _sockio;$/;"	m	class:SockIo	typeref:typename:int
_sockio	include/TcpConnection.h	/^    SockIo _sockio;$/;"	m	class:TcpConnection	typeref:typename:SockIo
_sok	include/Acceptor.h	/^    Socket _sok;$/;"	m	class:Acceptor	typeref:typename:Socket
_sought	include/KeyRecommander.h	/^    string _sought;$/;"	m	class:KeyRecommander	typeref:typename:string
_sought	include/WebPageSearcher.h	/^    string _sought;$/;"	m	class:WebPageSearcher	typeref:typename:string
_splitedWords	include/WebPageQuery.h	/^    vector<string> _splitedWords;$/;"	m	class:WebPageQuery	typeref:typename:vector<string>
_stopWords	include/Configuration.h	/^    set<string> _stopWords;$/;"	m	class:Configuration	typeref:typename:set<string>
_stopWords	include/DictProducer.h	/^    set<string> _stopWords;$/;"	m	class:DictProducer	typeref:typename:set<string>
_synLRU	include/ThreadPool.h	/^    map<std::thread::id,pair<LRU*,mutex*>> _synLRU;$/;"	m	class:ThreadPool	typeref:typename:map<std::thread::id,pair<LRU *,mutex * >>
_taskQue	include/ThreadPool.h	/^    TaskQueue _taskQue;$/;"	m	class:ThreadPool	typeref:typename:TaskQueue
_tcp	include/SearchServer.h	/^    TcpServer _tcp;$/;"	m	class:SearchServer	typeref:typename:TcpServer
_threadNum	include/ThreadPool.h	/^    size_t _threadNum;$/;"	m	class:ThreadPool	typeref:typename:size_t
_threads	include/ThreadPool.h	/^    vector<thread> _threads;$/;"	m	class:ThreadPool	typeref:typename:vector<thread>
_timeCb	include/EventLoop.h	/^    std::function<void()> _timeCb;$/;"	m	class:EventLoop	typeref:typename:std::function<void ()>
_timerFd	include/EventLoop.h	/^    int _timerFd;$/;"	m	class:EventLoop	typeref:typename:int
_todo	include/EventLoop.h	/^    std::vector<std::function<void()>> _todo;$/;"	m	class:EventLoop	typeref:typename:std::vector<std::function<void ()>>
_word	include/KeyRecommander.h	/^    string _word;$/;"	m	struct:CandidateResult	typeref:typename:string
_wordAllDocCnt	include/PageLibPreprocessor.h	/^    unordered_map<string,set<int>> _wordAllDocCnt;$/;"	m	class:PageLibPreprocessor	typeref:typename:unordered_map<string,set<int>>
_wordCutTool	include/WebPageQuery.h	/^    SplitTool * _wordCutTool;$/;"	m	class:WebPageQuery	typeref:typename:SplitTool *
_wordCutter	include/PageLibPreprocessor.h	/^    SplitTool * _wordCutter;$/;"	m	class:PageLibPreprocessor	typeref:typename:SplitTool *
_wordSingleCnt	include/PageLibPreprocessor.h	/^    map<string,map<int,int>> _wordSingleCnt;$/;"	m	class:PageLibPreprocessor	typeref:typename:map<string,map<int,int>>
accept	src/Acceptor.cc	/^int Acceptor::accept(){$/;"	f	class:Acceptor	typeref:typename:int
addEpollEvent	src/EventLoop.cc	/^void EventLoop::addEpollEvent(int fd){$/;"	f	class:EventLoop	typeref:typename:void
addTask	src/ThreadPool.cc	/^void ThreadPool::addTask(Task&& task){$/;"	f	class:ThreadPool	typeref:typename:void
all	Makefile	/^all:searchEngine bin\/precessorPage bin\/DictProducer $/;"	t
bin/Acceptor.o	Makefile	/^bin\/Acceptor.o:src\/Acceptor.cc include\/Acceptor.h$/;"	t
bin/Configuration.o	Makefile	/^bin\/Configuration.o:src\/Configuration.cc include\/Configuration.h$/;"	t
bin/Dict.o	Makefile	/^bin\/Dict.o:src\/Dict.cc $/;"	t
bin/DictProducer	Makefile	/^bin\/DictProducer:bin\/Dict.o bin\/DictProducer.o bin\/DirScanner.o \\$/;"	t
bin/DictProducer.o	Makefile	/^bin\/DictProducer.o:src\/DictProducer.cc include\/DictProducer.h$/;"	t
bin/Dictionary.o	Makefile	/^bin\/Dictionary.o:src\/Dictionary.cc include\/Dictionary.h$/;"	t
bin/DirScanner.o	Makefile	/^bin\/DirScanner.o:src\/DirScanner.cc include\/DirScanner.h$/;"	t
bin/EventLoop.o	Makefile	/^bin\/EventLoop.o:src\/EventLoop.cc include\/EventLoop.h$/;"	t
bin/InetAddr.o	Makefile	/^bin\/InetAddr.o:src\/InetAddr.cc include\/InetAddr.h$/;"	t
bin/KeyRecommander.o	Makefile	/^bin\/KeyRecommander.o:src\/KeyRecommander.cc include\/KeyRecommander.h$/;"	t
bin/LRU.o	Makefile	/^bin\/LRU.o:src\/LRU.cc include\/LRU.h$/;"	t
bin/PageLibPreprocessor.o	Makefile	/^bin\/PageLibPreprocessor.o:src\/PageLibPreprocessor.cc include\/PageLibPreprocessor.h \\$/;"	t
bin/RedisServer.o	Makefile	/^bin\/RedisServer.o: src\/RedisServer.cc include\/RedisServer.h$/;"	t
bin/SearchServer.o	Makefile	/^bin\/SearchServer.o:src\/SearchServer.cc include\/SearchServer.h$/;"	t
bin/SockIo.o	Makefile	/^bin\/SockIo.o:src\/SockIo.cc include\/SockIo.h$/;"	t
bin/Socket.o	Makefile	/^bin\/Socket.o:src\/Socket.cc include\/Socket.h$/;"	t
bin/SplitToolCppJieba.o	Makefile	/^bin\/SplitToolCppJieba.o:src\/SplitToolCppJieba.cc include\/SplitToolCppJieba.h\\$/;"	t
bin/Task.o	Makefile	/^bin\/Task.o:src\/Task.cc include\/Task.h$/;"	t
bin/TaskQueue.o	Makefile	/^bin\/TaskQueue.o:src\/TaskQueue.cc include\/TaskQueue.h$/;"	t
bin/TcpConnection.o	Makefile	/^bin\/TcpConnection.o:src\/TcpConnection.cc include\/TcpConnection.h$/;"	t
bin/TcpServer.o	Makefile	/^bin\/TcpServer.o:src\/TcpServer.cc include\/TcpServer.h$/;"	t
bin/ThreadPool.o	Makefile	/^bin\/ThreadPool.o:src\/ThreadPool.cc include\/ThreadPool.h$/;"	t
bin/WebPageQuery.o	Makefile	/^bin\/WebPageQuery.o:src\/WebPageQuery.cc include\/WebPageQuery.h$/;"	t
bin/WebPageSearcher.o	Makefile	/^bin\/WebPageSearcher.o:src\/WebPageSearcher.cc include\/WebPageSearcher.h$/;"	t
bin/client	Makefile	/^bin\/client:src\/testClient.cc$/;"	t
bin/main.o	Makefile	/^bin\/main.o:src\/main.cc$/;"	t
bin/precessorPage	Makefile	/^bin\/precessorPage:src\/precessorPage.cc bin\/PageLibPreprocessor.o  bin\/DirScanner.o bin\/Spli/;"	t
bin/testConf	Makefile	/^bin\/testConf:src\/testConf.cc bin\/Configuration.o$/;"	t
bin/testKeyRecommander	Makefile	/^bin\/testKeyRecommander:bin\/testKeyRecommander.o bin\/KeyRecommander.o\\$/;"	t
bin/testKeyRecommander.o	Makefile	/^bin\/testKeyRecommander.o:src\/testKeyRecommander.cc $/;"	t
bin/testReactor	Makefile	/^bin\/testReactor:bin\/testReactor.o  bin\/InetAddr.o bin\/Acceptor.o \\$/;"	t
bin/testReactor.o	Makefile	/^bin\/testReactor.o:src\/testReactor.cc$/;"	t
bin/testSplit	Makefile	/^bin\/testSplit:bin\/testSplit.o bin\/SplitToolCppJieba.o bin\/Configuration.o$/;"	t
bin/testSplit.o	Makefile	/^bin\/testSplit.o:src\/testSplit.cc$/;"	t
bin/testWebPageSearcher	Makefile	/^bin\/testWebPageSearcher:bin\/testWebPageSearcher.o bin\/WebPageQuery.o\\$/;"	t
bin/testWebPageSearcher.o	Makefile	/^bin\/testWebPageSearcher.o:src\/testWebPageSearcher.cc $/;"	t
bin/testdir	Makefile	/^bin\/testdir:bin\/testdir.o bin\/DirScanner.o$/;"	t
bin/testdir.o	Makefile	/^bin\/testdir.o: src\/testdir.cc$/;"	t
bind	src/Acceptor.cc	/^void Acceptor::bind(){$/;"	f	class:Acceptor	typeref:typename:void
buildCnDict	src/DictProducer.cc	/^void DictProducer::buildCnDict(){$/;"	f	class:DictProducer	typeref:typename:void
buildEnDict	src/DictProducer.cc	/^void DictProducer::buildEnDict(){$/;"	f	class:DictProducer	typeref:typename:void
buildInvertIndexTable	src/PageLibPreprocessor.cc	/^void PageLibPreprocessor::buildInvertIndexTable(){$/;"	f	class:PageLibPreprocessor	typeref:typename:void
calcuteWeights	src/WebPageQuery.cc	/^vector<double> WebPageQuery::calcuteWeights(const string & content,const vector<string> words){$/;"	f	class:WebPageQuery	typeref:typename:vector<double>
clean	tinyTest/rss/Makefile	/^clean:$/;"	t
compilation_database_folder	.ycm_extra_conf.py	/^compilation_database_folder = ''$/;"	v
computeIDF	tinyTest/tfIdf.cc	/^    std::map<std::string, double> computeIDF(const std::vector<std::vector<std::string>>& docs) /;"	f	class:TFIDF	typeref:typename:std::map<std::string,double>	file:
computeTF	tinyTest/tfIdf.cc	/^    std::map<std::string, double> computeTF(const std::vector<std::string>& doc) {$/;"	f	class:TFIDF	typeref:typename:std::map<std::string,double>	file:
computeTFIDF	tinyTest/tfIdf.cc	/^    std::map<std::string, double> computeTFIDF(const std::vector<std::string>& doc, const std::m/;"	f	class:TFIDF	typeref:typename:std::map<std::string,double>	file:
content	tinyTest/rss/RSS.hpp	/^    std::string content;$/;"	m	struct:RssItem	typeref:typename:std::string
createCnIndex	src/DictProducer.cc	/^void DictProducer::createCnIndex(){$/;"	f	class:DictProducer	typeref:typename:void
createEnIndex	src/DictProducer.cc	/^void DictProducer::createEnIndex(){$/;"	f	class:DictProducer	typeref:typename:void
createEpollfd	src/EventLoop.cc	/^int EventLoop::createEpollfd(){$/;"	f	class:EventLoop	typeref:typename:int
createEventfd	src/EventLoop.cc	/^int EventLoop::createEventfd(){$/;"	f	class:EventLoop	typeref:typename:int
createIndex	tinyTest/xapianTest.cc	/^void createIndex() {$/;"	f	typeref:typename:void
createInstance	src/Dictionary.cc	/^Dictionary* Dictionary::createInstance(){$/;"	f	class:Dictionary	typeref:typename:Dictionary *
createInstance	src/WebPageQuery.cc	/^WebPageQuery * WebPageQuery::createInstance(){$/;"	f	class:WebPageQuery	typeref:typename:WebPageQuery *
createtimerFd	src/EventLoop.cc	/^int EventLoop::createtimerFd(){$/;"	f	class:EventLoop	typeref:typename:int
cut	src/SplitToolCppJieba.cc	/^vector<string> SplitToolCppJieba::cut(const string & strToCut) {$/;"	f	class:SplitToolCppJieba	typeref:typename:vector<string>
cutRedundantPages	src/PageLibPreprocessor.cc	/^void PageLibPreprocessor::cutRedundantPages(){$/;"	f	class:PageLibPreprocessor	typeref:typename:void
database	.ycm_extra_conf.py	/^  database = None$/;"	v
database	.ycm_extra_conf.py	/^  database = ycm_core.CompilationDatabase( compilation_database_folder )$/;"	v
delEpollEvent	src/EventLoop.cc	/^void EventLoop::delEpollEvent(int fd){$/;"	f	class:EventLoop	typeref:typename:void
description	tinyTest/rss/RSS.hpp	/^    std::string description;$/;"	m	struct:RssItem	typeref:typename:std::string
destroy	src/Configuration.cc	/^void Configuration::destroy(){$/;"	f	class:Configuration	typeref:typename:void
destroy	src/Dictionary.cc	/^void Dictionary::destroy(){$/;"	f	class:Dictionary	typeref:typename:void
destroy	src/WebPageQuery.cc	/^void WebPageQuery::destroy(){$/;"	f	class:WebPageQuery	typeref:typename:void
distance	src/KeyRecommander.cc	/^int KeyRecommander::distance(const string &rhs){$/;"	f	class:KeyRecommander	typeref:typename:int
doParse	src/ProtocolParser.cc	/^void ProtocolParser::doParse(){$/;"	f	class:ProtocolParser	typeref:typename:void
doProcess	src/PageLibPreprocessor.cc	/^void PageLibPreprocessor::doProcess(){$/;"	f	class:PageLibPreprocessor	typeref:typename:void
doQuery	src/Dictionary.cc	/^set<pair<string,int>> Dictionary::doQuery(string word){$/;"	f	class:Dictionary	typeref:typename:set<pair<string,int>>
doQuery	src/WebPageQuery.cc	/^priority_queue<pair<WebPage,double>,vector<pair<WebPage,double>>,MyCompareWebpage> WebPageQuery:/;"	f	class:WebPageQuery	typeref:typename:priority_queue<pair<WebPage,double>,vector<pair<WebPage,double>>,MyCompareWebpage>
doQuery	src/WebPageSearcher.cc	/^void WebPageSearcher::doQuery(){$/;"	f	class:WebPageSearcher	typeref:typename:void
doSyn	src/ThreadPool.cc	/^void ThreadPool::doSyn(){$/;"	f	class:ThreadPool	typeref:typename:void
doTask	src/ThreadPool.cc	/^void ThreadPool::doTask(){$/;"	f	class:ThreadPool	typeref:typename:void
doThings	src/EventLoop.cc	/^void EventLoop::doThings(){$/;"	f	class:EventLoop	typeref:typename:void
doXapianQuery	src/WebPageQuery.cc	/^WebPageQuery::doXapianQuery(string queryWords){$/;"	f	class:WebPageQuery	typeref:typename:priority_queue<pair<WebPage,double>,vector<pair<WebPage,double>>,MyCompareWebpage>
docCnt	include/WebPageQuery.h	/^    static int docCnt;$/;"	m	class:WebPageQuery	typeref:typename:int
docCnt	src/WebPageQuery.cc	/^int WebPageQuery::docCnt = 0;$/;"	m	class:WebPageQuery	typeref:typename:int
docId	include/PageLibPreprocessor.h	/^    static int docId;$/;"	m	class:PageLibPreprocessor	typeref:typename:int
docId	src/PageLibPreprocessor.cc	/^int PageLibPreprocessor::docId = 1;$/;"	m	class:PageLibPreprocessor	typeref:typename:int
dump	tinyTest/rss/RSS.cpp	/^void RssReader::dump(const std::string & filename){$/;"	f	class:RssReader	typeref:typename:void
empty	src/TaskQueue.cc	/^bool TaskQueue::empty(){$/;"	f	class:TaskQueue	typeref:typename:bool
epollWait	src/EventLoop.cc	/^void EventLoop::epollWait(){$/;"	f	class:EventLoop	typeref:typename:void
exchangeLRU	src/ThreadPool.cc	/^void ThreadPool::exchangeLRU(){$/;"	f	class:ThreadPool	typeref:typename:void
exchanged	include/ThreadPool.h	/^    bool exchanged;$/;"	m	class:ThreadPool	typeref:typename:bool
execute	src/KeyRecommander.cc	/^void KeyRecommander::execute(){$/;"	f	class:KeyRecommander	typeref:typename:void
fd	src/Acceptor.cc	/^int Acceptor::fd(){$/;"	f	class:Acceptor	typeref:typename:int
fd	src/Socket.cc	/^int Socket::fd(){$/;"	f	class:Socket	typeref:typename:int
flags	.ycm_extra_conf.py	/^flags = [$/;"	v
full	src/TaskQueue.cc	/^bool TaskQueue::full(){$/;"	f	class:TaskQueue	typeref:typename:bool
get	src/LRU.cc	/^string LRU::get(const string & key)$/;"	f	class:LRU	typeref:typename:string
get	tinyTest/LRU.cc	/^    int get(int key)$/;"	f	class:LRU	typeref:typename:int	file:
get	tinyTest/myLru.cc	/^    int get(int key) {$/;"	f	class:LRUCache	typeref:typename:int	file:
getAddr	src/InetAddr.cc	/^struct sockaddr_in* InetAddr::getAddr(){$/;"	f	class:InetAddr	typeref:struct:sockaddr_in *
getConfigMap	src/Configuration.cc	/^map<string,string> & Configuration::getConfigMap(){$/;"	f	class:Configuration	typeref:typename:map<string,string> &
getCosin	src/WebPageQuery.cc	/^double WebPageQuery::getCosin(const vector<double>& candidate){$/;"	f	class:WebPageQuery	typeref:typename:double
getDF	src/WebPageQuery.cc	/^int WebPageQuery::getDF(const string & word){$/;"	f	class:WebPageQuery	typeref:typename:int
getDict	src/Dictionary.cc	/^vector<pair<string,int>> & Dictionary::getDict(){$/;"	f	class:Dictionary	typeref:typename:vector<pair<string,int>> &
getFiles	src/DirScanner.cc	/^vector<string> & DirScanner::getFiles(){$/;"	f	class:DirScanner	typeref:typename:vector<string> &
getIP	src/InetAddr.cc	/^std::string InetAddr::getIP() const{$/;"	f	class:InetAddr	typeref:typename:std::string
getIndexTable	src/Dictionary.cc	/^unordered_map<string,set<int>> & Dictionary::getIndexTable(){$/;"	f	class:Dictionary	typeref:typename:unordered_map<string,set<int>> &
getInstance	src/Configuration.cc	/^Configuration * Configuration::getInstance(){$/;"	f	class:Configuration	typeref:typename:Configuration *
getPort	src/InetAddr.cc	/^unsigned short InetAddr::getPort() const{$/;"	f	class:InetAddr	typeref:typename:unsigned short
getPrefixOne	src/DictProducer.cc	/^size_t DictProducer::getPrefixOne(char ch){$/;"	f	class:DictProducer	typeref:typename:size_t
getPrefixOne	src/SplitToolCppJieba.cc	/^size_t getPrefixOne(char ch){$/;"	f	typeref:typename:size_t
getPrefixOne	tinyTest/chinese.cc	/^size_t getPrefixOne(char ch){$/;"	f	typeref:typename:size_t
getStopWords	src/Configuration.cc	/^set<string> & Configuration::getStopWords(){$/;"	f	class:Configuration	typeref:typename:set<string> &
getStopWords	src/DictProducer.cc	/^void DictProducer::getStopWords(){$/;"	f	class:DictProducer	typeref:typename:void
getTF	src/WebPageQuery.cc	/^int WebPageQuery::getTF(const string & content,const string & word){$/;"	f	class:WebPageQuery	typeref:typename:int
getVal	src/RedisServer.cc	/^string RedisServer::getVal(const string& key){$/;"	f	class:RedisServer	typeref:typename:string
getWebPage	src/WebPageQuery.cc	/^WebPage WebPageQuery::getWebPage(string & doc){$/;"	f	class:WebPageQuery	typeref:typename:WebPage
getlocalAddr	src/TcpConnection.cc	/^InetAddr TcpConnection::getlocalAddr(){$/;"	f	class:TcpConnection	typeref:typename:InetAddr
getpeerAddr	src/TcpConnection.cc	/^InetAddr TcpConnection::getpeerAddr(){$/;"	f	class:TcpConnection	typeref:typename:InetAddr
handleClose	src/TcpConnection.cc	/^void TcpConnection::handleClose(){$/;"	f	class:TcpConnection	typeref:typename:void
handleMessage	src/TcpConnection.cc	/^void TcpConnection::handleMessage(){$/;"	f	class:TcpConnection	typeref:typename:void
handleNewConnection	src/EventLoop.cc	/^void EventLoop::handleNewConnection(){$/;"	f	class:EventLoop	typeref:typename:void
handleNewConnection	src/TcpConnection.cc	/^void TcpConnection::handleNewConnection(){$/;"	f	class:TcpConnection	typeref:typename:void
handleRead	src/EventLoop.cc	/^void EventLoop::handleRead(int fd){$/;"	f	class:EventLoop	typeref:typename:void
hmm_model.utf8/gbk	dict/README.md	/^### hmm_model.utf8\/gbk$/;"	S	section:CppJieba字典""分词
idf.utf8	dict/README.md	/^### idf.utf8$/;"	S	section:CppJieba字典""关键词抽取
init	src/Dictionary.cc	/^void Dictionary::init(){$/;"	f	class:Dictionary	typeref:typename:void
initStopWords	src/Configuration.cc	/^void Configuration::initStopWords(){$/;"	f	class:Configuration	typeref:typename:void
init_r	src/Configuration.cc	/^void Configuration::init_r(){$/;"	f	class:Configuration	typeref:typename:void
init_r	src/Dictionary.cc	/^void Dictionary::init_r(){$/;"	f	class:Dictionary	typeref:typename:void
init_r	src/WebPageQuery.cc	/^void WebPageQuery::init_r(){$/;"	f	class:WebPageQuery	typeref:typename:void
isClosed	src/TcpConnection.cc	/^bool TcpConnection::isClosed(){$/;"	f	class:TcpConnection	typeref:typename:bool
isExit	include/TaskQueue.h	/^    bool isExit;$/;"	m	class:TaskQueue	typeref:typename:bool
jieba.dict.utf8/gbk	dict/README.md	/^### jieba.dict.utf8\/gbk$/;"	S	section:CppJieba字典""分词
link	tinyTest/rss/RSS.hpp	/^    std::string link;$/;"	m	struct:RssItem	typeref:typename:std::string
listen	src/Acceptor.cc	/^void Acceptor::listen(){$/;"	f	class:Acceptor	typeref:typename:void
loadLibary	src/WebPageQuery.cc	/^void WebPageQuery::loadLibary(){$/;"	f	class:WebPageQuery	typeref:typename:void
loop	src/EventLoop.cc	/^void EventLoop::loop(){$/;"	f	class:EventLoop	typeref:typename:void
lru	tinyTest/myLru.cc	/^    map<int,pair<int,list<int>::iterator>> lru;$/;"	m	class:LRUCache	typeref:typename:map<int,pair<int,list<int>::iterator>>	file:
main	src/Dict.cc	/^int main(int argc,char * argv[])$/;"	f	typeref:typename:int
main	src/main.cc	/^int main(int argc,char * argv[])$/;"	f	typeref:typename:int
main	src/precessorPage.cc	/^int main(int argc,char * argv[])$/;"	f	typeref:typename:int
main	src/testClient.cc	/^int main(int argc,char*argv[])$/;"	f	typeref:typename:int
main	src/testConf.cc	/^int main(int argc,char * argv[])$/;"	f	typeref:typename:int
main	src/testDict.cc	/^int main(int argc,char * argv[])$/;"	f	typeref:typename:int
main	src/testKeyRecommander.cc	/^int main(int argc,char * argv[])$/;"	f	typeref:typename:int
main	src/testReactor.cc	/^int main(int argc,char * argv[])$/;"	f	typeref:typename:int
main	src/testSplit.cc	/^int main(int argc,char * argv[])$/;"	f	typeref:typename:int
main	src/testWebPageSearcher.cc	/^int main(int argc,char * argv[])$/;"	f	typeref:typename:int
main	src/testdir.cc	/^int main(int argc,char * argv[])$/;"	f	typeref:typename:int
main	tinyTest/LRU.cc	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	tinyTest/chinese.cc	/^int main(int argc,char * argv[])$/;"	f	typeref:typename:int
main	tinyTest/fts.cpp	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
main	tinyTest/hiredisTest.cc	/^int main(int argc,char * argv[])$/;"	f	typeref:typename:int
main	tinyTest/jiebademo.cc	/^int main(int argc, char** argv) {$/;"	f	typeref:typename:int
main	tinyTest/minDistance.cc	/^int main() {$/;"	f	typeref:typename:int
main	tinyTest/myLru.cc	/^int main(int argc,char * argv[])$/;"	f	typeref:typename:int
main	tinyTest/pool.cc	/^int main(int argc,char * argv[])$/;"	f	typeref:typename:int
main	tinyTest/realPath.cc	/^int main(int argc,char * argv[])$/;"	f	typeref:typename:int
main	tinyTest/rss/main.cpp	/^int main(){$/;"	f	typeref:typename:int
main	tinyTest/simdemp.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	tinyTest/test.cc	/^int main(int argc,char * argv[])$/;"	f	typeref:typename:int
main	tinyTest/tfIdf.cc	/^int main() {$/;"	f	typeref:typename:int
main	tinyTest/xapianTest.cc	/^int main() {$/;"	f	typeref:typename:int
minDistance	src/KeyRecommander.cc	/^int minDistance(const std::string& word1, const std::string& word2) {$/;"	f	typeref:typename:int
minDistance	tinyTest/minDistance.cc	/^    int minDistance(const std::string& word1, const std::string& word2) {$/;"	f	class:Solution	typeref:typename:int	file:
numfreq	tinyTest/myLru.cc	/^    list<int> numfreq;$/;"	m	class:LRUCache	typeref:typename:list<int>	file:
onClose	src/SearchServer.cc	/^void SearchServer::onClose(const shared_ptr<TcpConnection> & onClose){$/;"	f	class:SearchServer	typeref:typename:void
onMessage	src/SearchServer.cc	/^void SearchServer::onMessage(const shared_ptr<TcpConnection> & onMessage){$/;"	f	class:SearchServer	typeref:typename:void
onNewConnection	src/SearchServer.cc	/^void SearchServer::onNewConnection(const shared_ptr<TcpConnection> & onNewConnection){$/;"	f	class:SearchServer	typeref:typename:void
operator ()	include/KeyRecommander.h	/^    bool operator()(const CandidateResult &lhs,const CandidateResult &rhs)const {$/;"	f	struct:MyCompareCandidate	typeref:typename:bool
operator ()	include/WebPageQuery.h	/^    bool operator()(const pair<WebPage,double> &lhs,$/;"	f	struct:MyCompareWebpage	typeref:typename:bool
pop	src/TaskQueue.cc	/^TaskQueue::Task TaskQueue::pop(){$/;"	f	class:TaskQueue	typeref:typename:TaskQueue::Task
print	src/LRU.cc	/^void LRU::print() const{$/;"	f	class:LRU	typeref:typename:void
print	tinyTest/LRU.cc	/^    void print() const$/;"	f	class:LRU	typeref:typename:void	file:
print	tinyTest/rss/RSS.cpp	/^void RssReader::print(){$/;"	f	class:RssReader	typeref:typename:void
printConnect	src/TcpConnection.cc	/^void TcpConnection::printConnect() const{$/;"	f	class:TcpConnection	typeref:typename:void
process	src/Task.cc	/^void Task::process(LRU* cacheLocal){$/;"	f	class:Task	typeref:typename:void
push	src/TaskQueue.cc	/^void TaskQueue::push(Task&& task){$/;"	f	class:TaskQueue	typeref:typename:void
put	src/LRU.cc	/^void LRU::put(string key,string value)$/;"	f	class:LRU	typeref:typename:void
put	tinyTest/LRU.cc	/^    void put(int key, int value)$/;"	f	class:LRU	typeref:typename:void	file:
put	tinyTest/myLru.cc	/^    void put(int key, int value) {$/;"	f	class:LRUCache	typeref:typename:void	file:
queryIndex	tinyTest/xapianTest.cc	/^void queryIndex() {$/;"	f	typeref:typename:void
queryIndexTable	src/KeyRecommander.cc	/^void KeyRecommander::queryIndexTable(){$/;"	f	class:KeyRecommander	typeref:typename:void
readJsonStr	src/SockIo.cc	/^int SockIo::readJsonStr(char *buff,int len){$/;"	f	class:SockIo	typeref:typename:int
readn	src/SockIo.cc	/^int SockIo::readn(char *buff,int len){$/;"	f	class:SockIo	typeref:typename:int
rebuild	tinyTest/rss/Makefile	/^rebuild: clean $(EXEC)$/;"	t
receive	src/TcpConnection.cc	/^std::string TcpConnection::receive(){$/;"	f	class:TcpConnection	typeref:typename:std::string
response	src/KeyRecommander.cc	/^void KeyRecommander::response(){$/;"	f	class:KeyRecommander	typeref:typename:void
response	src/WebPageSearcher.cc	/^void WebPageSearcher::response(){$/;"	f	class:WebPageSearcher	typeref:typename:void
runInLoop	src/EventLoop.cc	/^void EventLoop::runInLoop(std::function<void()>&& func){$/;"	f	class:EventLoop	typeref:typename:void
searchEngine	Makefile	/^searchEngine:bin\/main.o  bin\/InetAddr.o bin\/Acceptor.o \\$/;"	t
selectDB	src/RedisServer.cc	/^void RedisServer::selectDB(int dbNum){$/;"	f	class:RedisServer	typeref:typename:void
send	src/TcpConnection.cc	/^void TcpConnection::send(string & res){$/;"	f	class:TcpConnection	typeref:typename:void
sendJsonStr	src/SockIo.cc	/^int SockIo::sendJsonStr(const char *buff,int len){$/;"	f	class:SockIo	typeref:typename:int
sendToLoop	src/TcpConnection.cc	/^void TcpConnection::sendToLoop(string res){$/;"	f	class:TcpConnection	typeref:typename:void
sendn	src/SockIo.cc	/^int SockIo::sendn(const char *buff,int len){$/;"	f	class:SockIo	typeref:typename:int
setAllCallback	src/EventLoop.cc	/^void EventLoop::setAllCallback(std::function<void(std::shared_ptr<TcpConnection>)> && cb1,$/;"	f	class:EventLoop	typeref:typename:void
setAllCallback	src/TcpConnection.cc	/^void TcpConnection::setAllCallback(std::function<void(const std::shared_ptr<TcpConnection>)> & c/;"	f	class:TcpConnection	typeref:typename:void
setAllCallback	src/TcpServer.cc	/^void TcpServer::setAllCallback(std::function<void(std::shared_ptr<TcpConnection>)> && cb1,$/;"	f	class:TcpServer	typeref:typename:void
setKey	src/RedisServer.cc	/^void RedisServer::setKey(const string& key,const string & val){$/;"	f	class:RedisServer	typeref:typename:void
setLRUCallback	src/SearchServer.cc	/^void SearchServer::setLRUCallback(){$/;"	f	class:SearchServer	typeref:typename:void
setLRUCallback	src/TcpServer.cc	/^void TcpServer::setLRUCallback(std::function<void()> &&cbSyn){$/;"	f	class:TcpServer	typeref:typename:void
setReuseIP	src/Acceptor.cc	/^void Acceptor::setReuseIP(){$/;"	f	class:Acceptor	typeref:typename:void
setReusePort	src/Acceptor.cc	/^void Acceptor::setReusePort(){$/;"	f	class:Acceptor	typeref:typename:void
setTcpAllCallback	src/SearchServer.cc	/^void SearchServer::setTcpAllCallback(){$/;"	f	class:SearchServer	typeref:typename:void
setTime	src/EventLoop.cc	/^void EventLoop::setTime(int init,int oot){$/;"	f	class:EventLoop	typeref:typename:void
setTimeCb	src/EventLoop.cc	/^void EventLoop::setTimeCb(std::function<void()>&& cb){$/;"	f	class:EventLoop	typeref:typename:void
start	src/SearchServer.cc	/^void SearchServer::start(){$/;"	f	class:SearchServer	typeref:typename:void
start	src/TcpServer.cc	/^void TcpServer::start(){$/;"	f	class:TcpServer	typeref:typename:void
start	src/ThreadPool.cc	/^void ThreadPool::start(){$/;"	f	class:ThreadPool	typeref:typename:void
startListen	src/Acceptor.cc	/^void Acceptor::startListen(){$/;"	f	class:Acceptor	typeref:typename:void
statistic	src/KeyRecommander.cc	/^void KeyRecommander::statistic(set<pair<string,int>>&iset){$/;"	f	class:KeyRecommander	typeref:typename:void
stop	src/SearchServer.cc	/^void SearchServer::stop(){$/;"	f	class:SearchServer	typeref:typename:void
stop	src/TaskQueue.cc	/^void TaskQueue::stop(){$/;"	f	class:TaskQueue	typeref:typename:void
stop	src/TcpServer.cc	/^void TcpServer::stop(){$/;"	f	class:TcpServer	typeref:typename:void
stop	src/ThreadPool.cc	/^void ThreadPool::stop(){$/;"	f	class:ThreadPool	typeref:typename:void
stop_words.utf8	dict/README.md	/^### stop_words.utf8$/;"	S	section:CppJieba字典""关键词抽取
store	src/DictProducer.cc	/^void DictProducer::store(){$/;"	f	class:DictProducer	typeref:typename:void
storeIntersection	src/WebPageQuery.cc	/^void WebPageQuery::storeIntersection(){$/;"	f	class:WebPageQuery	typeref:typename:void
storeOffset	src/PageLibPreprocessor.cc	/^void PageLibPreprocessor::storeOffset(){$/;"	f	class:PageLibPreprocessor	typeref:typename:void
storeOnDisk	src/PageLibPreprocessor.cc	/^void PageLibPreprocessor::storeOnDisk(){}$/;"	f	class:PageLibPreprocessor	typeref:typename:void
storePages	src/PageLibPreprocessor.cc	/^void PageLibPreprocessor::storePages(){$/;"	f	class:PageLibPreprocessor	typeref:typename:void
synAllLRU	src/ThreadPool.cc	/^void ThreadPool::synAllLRU(){$/;"	f	class:ThreadPool	typeref:typename:void
synIn	src/LRU.cc	/^void LRU::synIn(LRU *plru){$/;"	f	class:LRU	typeref:typename:void
synOut	src/LRU.cc	/^void LRU::synOut(LRU *plru){$/;"	f	class:LRU	typeref:typename:void
synThread	include/ThreadPool.h	/^    thread synThread;$/;"	m	class:ThreadPool	typeref:typename:thread
test	Makefile	/^test:bin\/testdir bin\/testSplit bin\/testConf bin\/testReactor bin\/client\\$/;"	t
test	tinyTest/LRU.cc	/^void test()$/;"	f	typeref:typename:void
test0	tinyTest/rss/main.cpp	/^void test0()$/;"	f	typeref:typename:void
test1	tinyTest/rss/main.cpp	/^void test1(){$/;"	f	typeref:typename:void
title	tinyTest/rss/RSS.hpp	/^    std::string title;$/;"	m	struct:RssItem	typeref:typename:std::string
traverse	src/DirScanner.cc	/^void DirScanner::traverse(string dir){$/;"	f	class:DirScanner	typeref:typename:void
unloop	src/EventLoop.cc	/^void EventLoop::unloop(){$/;"	f	class:EventLoop	typeref:typename:void
utf8ToUtf32	tinyTest/minDistance.cc	/^std::u32string utf8ToUtf32(const std::string& utf8Str) {$/;"	f	typeref:typename:std::u32string
wakeup	src/EventLoop.cc	/^void EventLoop::wakeup(){$/;"	f	class:EventLoop	typeref:typename:void
xapianBuildInvertIndexTable	src/PageLibPreprocessor.cc	/^void PageLibPreprocessor::xapianBuildInvertIndexTable(){$/;"	f	class:PageLibPreprocessor	typeref:typename:void
~Acceptor	src/Acceptor.cc	/^Acceptor::~Acceptor(){$/;"	f	class:Acceptor
~Configuration	src/Configuration.cc	/^Configuration::~Configuration(){$/;"	f	class:Configuration
~DictProducer	src/DictProducer.cc	/^DictProducer::~DictProducer(){$/;"	f	class:DictProducer
~Dictionary	src/Dictionary.cc	/^Dictionary::~Dictionary(){$/;"	f	class:Dictionary
~DirScanner	src/DirScanner.cc	/^DirScanner::~DirScanner(){$/;"	f	class:DirScanner
~EventLoop	src/EventLoop.cc	/^EventLoop::~EventLoop(){$/;"	f	class:EventLoop
~InetAddr	src/InetAddr.cc	/^InetAddr::~InetAddr(){$/;"	f	class:InetAddr
~KeyRecommander	src/KeyRecommander.cc	/^KeyRecommander::~KeyRecommander(){}$/;"	f	class:KeyRecommander
~LRU	src/LRU.cc	/^LRU::~LRU(){}$/;"	f	class:LRU
~PageLibPreprocessor	src/PageLibPreprocessor.cc	/^PageLibPreprocessor::~PageLibPreprocessor(){$/;"	f	class:PageLibPreprocessor
~ProtocolParser	src/ProtocolParser.cc	/^ProtocolParser::~ProtocolParser(){}$/;"	f	class:ProtocolParser
~RedisServer	src/RedisServer.cc	/^RedisServer::~RedisServer(){$/;"	f	class:RedisServer
~SearchServer	src/SearchServer.cc	/^SearchServer::~SearchServer(){}$/;"	f	class:SearchServer
~SockIo	include/SockIo.h	/^    ~SockIo(){}$/;"	f	class:SockIo
~Socket	src/Socket.cc	/^Socket::~Socket(){$/;"	f	class:Socket
~SplitTool	include/SplitTool.h	/^    virtual ~SplitTool(){}$/;"	f	class:SplitTool
~SplitToolCppJieba	src/SplitToolCppJieba.cc	/^SplitToolCppJieba::~SplitToolCppJieba(){$/;"	f	class:SplitToolCppJieba
~Task	src/Task.cc	/^Task::~Task(){$/;"	f	class:Task
~TaskQueue	src/TaskQueue.cc	/^TaskQueue::~TaskQueue(){$/;"	f	class:TaskQueue
~TcpConnection	src/TcpConnection.cc	/^TcpConnection::~TcpConnection(){$/;"	f	class:TcpConnection
~TcpServer	include/TcpServer.h	/^    ~TcpServer(){}$/;"	f	class:TcpServer
~ThreadPool	include/ThreadPool.h	/^    ~ThreadPool(){}$/;"	f	class:ThreadPool
~WebPageQuery	src/WebPageQuery.cc	/^WebPageQuery::~WebPageQuery(){$/;"	f	class:WebPageQuery
~WebPageSearcher	src/WebPageSearcher.cc	/^WebPageSearcher::~WebPageSearcher(){}$/;"	f	class:WebPageSearcher
关键词抽取	dict/README.md	/^## 关键词抽取$/;"	s	chapter:CppJieba字典
分词	dict/README.md	/^## 分词$/;"	s	chapter:CppJieba字典
